{"version":3,"sources":["webpack://webpack-env/./src/js/ymaps.js","webpack://webpack-env/./src/index.js"],"names":["mapInit","ymaps","ready","myMap","Map","center","zoom","controls","behaviors","clusterer","Clusterer","groupByCoordinates","clusterDisableClickZoom","clusterBalloonContentLayoutWidth","clusterBalloonContentLayoutHeight","hasBalloon","geoObjects","add","coords","placemarksData","storage","localStorage","placemarks","JSON","parse","template2","Handlebars","compile","transformArray","coordinates","newArr","forEach","data","toString","push","name","place","review","events","e","get","geometry","getCoordinates","balloon","open","items","createPlaceMark","ourCoords","placemark","Placemark","balloonContentBody","showPlaceMarks","i","length","saveToStorage","form","elements","value","stringify","showBalloon","contentBody","document","addEventListener","target","id","getElementById","preventDefault","close","window","onload"],"mappings":"4BAAA,SAASA,IACPC,MAAMC,MAAM,KAEV,IAAIC,EAAQ,IAAIF,MAAMG,IAAI,MAAO,CAC/BC,OAAQ,CAAC,UAAW,WACpBC,KAAM,GACNC,SAAU,CAAC,eACXC,UAAW,CAAC,UAKd,IAAIC,EAAY,IAAIR,MAAMS,UAAU,CAClCC,mBAAoB,KACpBC,wBAAyB,KACzBC,iCAAkC,IAClCC,kCAAmC,IACnCC,WAAY,QAEdZ,EAAMa,WAAWC,IAAIR,GAErB,IAAIS,EAGJ,IAAIC,EACJ,IAAIC,EAAUC,aACd,IAAKD,EAAQE,WAAY,CACvBH,EAAiB,OACZ,CACLA,EAAiBI,KAAKC,MAAMJ,EAAQE,YAKtC,MAAMG,EAAYC,WAAWC;;;;;;;;;;;;;;;;;;YAoB7B,SAASC,EAAeN,EAAYO,GAClC,IAAIC,EAAS,GACbR,EAAWS,QAASC,IAClB,GAAIH,EAAYI,aAAeD,EAAKd,OAAOe,WAAY,CACrDH,EAAOI,KAAK,CACVC,KAAMH,EAAKG,KACXC,MAAOJ,EAAKI,MACZC,OAAQL,EAAKK,YAInB,OAAOP,EAKTrB,EAAU6B,OAAOrB,IAAI,QAAUsB,IAC7BrB,EAASqB,EAAEC,IAAI,UAAUC,SAASC,iBAClCvC,EAAMwC,QAAQC,KACZ1B,EACAO,EAAU,CACRoB,MAAOjB,EAAeT,EAAgBD,QAO5C,SAAS4B,EAAgBC,EAAWf,GAClC,IAAIgB,EAAY,IAAI/C,MAAMgD,UAAUF,EAAW,CAC7CG,mBAAoBzB,EAAU,CAC5BoB,MAAO,CACL,CACEV,KAAMH,EAAKG,KACXC,MAAOJ,EAAKI,MACZC,OAAQL,EAAKK,aAMrB5B,EAAUQ,IAAI+B,GAEd,OAAOA,EAIT,SAASG,EAAenB,GACtB,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAKqB,OAAQD,IAAK,CACpCN,EAAgBd,EAAKoB,GAAGlC,OAAQc,EAAKoB,KAKzC,SAASE,EAActB,EAAMuB,EAAMrC,GACjCc,EAAKE,KAAK,CAERC,KAAMoB,EAAKC,SAASrB,KAAKsB,MACzBrB,MAAOmB,EAAKC,SAASpB,MAAMqB,MAC3BpB,OAAQkB,EAAKC,SAASnB,OAAOoB,MAC7BvC,OAAQA,IAGVE,EAAQE,WAAaC,KAAKmC,UAAU1B,GAItCmB,EAAehC,GAGf,MAAMwC,EAAc,SAAUzC,GAC5Bf,EAAMwC,QAAQC,KAAK1B,EAAQ,CACzB0C,YAAanC,EAAU,CACrBoB,MAAOjB,EAAeT,EAAgBD,QAK5Cf,EAAMmC,OAAOrB,IAAI,QAAUsB,IACzBrB,EAASqB,EAAEC,IAAI,UACfmB,EAAYzC,KAGd2C,SAASC,iBAAiB,QAAUvB,IAClC,GAAIA,EAAEwB,OAAOC,KAAO,MAAO,CACzB,MAAMT,EAAOM,SAASI,eAAe,QACrC1B,EAAE2B,iBACFZ,EAAcnC,EAAgBoC,EAAMrC,GACpC4B,EAAgB5B,EAAQC,EAAeA,EAAekC,OAAS,IAE/DlD,EAAMwC,QAAQwB,aC7ItBC,OAAOC,OAASrE,K","file":"js/index.6aff80ea89943e264ecf.js","sourcesContent":["function mapInit() {\n  ymaps.ready(() => {\n    //     create map\n    let myMap = new ymaps.Map(\"map\", {\n      center: [55.751574, 37.573856],\n      zoom: 13,\n      controls: [\"zoomControl\"],\n      behaviors: [\"drag\"],\n    });\n\n    //create cluster\n\n    let clusterer = new ymaps.Clusterer({\n      groupByCoordinates: true,\n      clusterDisableClickZoom: true,\n      clusterBalloonContentLayoutWidth: 200,\n      clusterBalloonContentLayoutHeight: 330,\n      hasBalloon: false,\n    });\n    myMap.geoObjects.add(clusterer);\n\n    let coords;\n\n    //      create localStorage\n    let placemarksData;\n    let storage = localStorage;\n    if (!storage.placemarks) {\n      placemarksData = [];\n    } else {\n      placemarksData = JSON.parse(storage.placemarks);\n    }\n\n    //      createPlacemark\n\n    const template2 = Handlebars.compile(`\n    <ul class=\"reviews\">\n    {{#each items}}\n        <li class=\"reviews__item review\">\n            <div class=\"review__header\">\n                <span class=\"review__name\">{{name}}</span>\n                <span class=\"review__location\">[{{place}}]</span>\n            </div>\n            <p class=\"review__text\">{{review}}</p>\n        </li>\n    {{/each}} \n</ul>\n    <h2>Отзыв</h2> \n  <form id='form'>\n  <p><input type='text' id='input__name' placeholder='Укажите ваше имя' name='name'></p> \n  <input type='text' id='input__place' placeholder = 'Укажите место' name='place'>\n  <p><textarea id='input__review' placeholder ='Оставьте отзыв' name='review'></textarea></p> \n  <p><button type='button' id='btn'>Добавить</button></p>  \n  </form>`);\n\n    function transformArray(placemarks, coordinates) {\n      let newArr = [];\n      placemarks.forEach((data) => {\n        if (coordinates.toString() === data.coords.toString()) {\n          newArr.push({\n            name: data.name,\n            place: data.place,\n            review: data.review,\n          });\n        }\n      });\n      return newArr;\n    }\n\n    //add click to clusterer\n\n    clusterer.events.add(\"click\", (e) => {\n      coords = e.get(\"target\").geometry.getCoordinates();\n      myMap.balloon.open(\n        coords,\n        template2({\n          items: transformArray(placemarksData, coords),\n        })\n      );\n    });\n\n    //create placemark\n\n    function createPlaceMark(ourCoords, data) {\n      let placemark = new ymaps.Placemark(ourCoords, {\n        balloonContentBody: template2({\n          items: [\n            {\n              name: data.name,\n              place: data.place,\n              review: data.review,\n            },\n          ],\n        }),\n      });\n\n      clusterer.add(placemark);\n\n      return placemark;\n    }\n\n    //      show placemarks on the map\n    function showPlaceMarks(data) {\n      for (let i = 0; i < data.length; i++) {\n        createPlaceMark(data[i].coords, data[i]);\n      }\n    }\n\n    //      save to localStorage\n    function saveToStorage(data, form, coords) {\n      data.push({\n        //добавляем метку в localStorage\n        name: form.elements.name.value,\n        place: form.elements.place.value,\n        review: form.elements.review.value,\n        coords: coords,\n      });\n\n      storage.placemarks = JSON.stringify(data);\n    }\n\n    //show placemarks on the map\n    showPlaceMarks(placemarksData);\n\n    //show balloon\n    const showBalloon = function (coords) {\n      myMap.balloon.open(coords, {\n        contentBody: template2({\n          items: transformArray(placemarksData, coords),\n        }),\n      });\n    };\n\n    myMap.events.add(\"click\", (e) => {\n      coords = e.get(\"coords\");\n      showBalloon(coords);\n    });\n\n    document.addEventListener(\"click\", (e) => {\n      if (e.target.id === \"btn\") {\n        const form = document.getElementById(\"form\");\n        e.preventDefault();\n        saveToStorage(placemarksData, form, coords);\n        createPlaceMark(coords, placemarksData[placemarksData.length - 1]);\n\n        myMap.balloon.close();\n      }\n    });\n  });\n}\n\nexport { mapInit };\n","import \"./css/index.css\";\nimport { mapInit } from \"./js/ymaps\";\n\nwindow.onload = mapInit();\n"],"sourceRoot":""}